<?xml version="1.0" encoding="UTF-8"?>
<!--
*************************************************
	         AnyLogic Project File 
*************************************************	         
-->
<AnyLogicWorkspace WorkspaceVersion="1.9" AnyLogicVersion="7.1.2.201502051922" AlpVersion="7.1.10">
<Model>
	<Id>1443189243239</Id>
	<Name><![CDATA[Water Heater]]></Name>
	<EngineVersion>6</EngineVersion>
	<JavaPackageName><![CDATA[water_heater]]></JavaPackageName>
	<ModelTimeUnit><![CDATA[Second]]></ModelTimeUnit>
	<ActiveObjectClasses>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1443189243244</Id>
			<Name><![CDATA[Main]]></Name>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Import><![CDATA[import org.openxmlformats.schemas.spreadsheetml.x2006.main.CalcChainDocument;]]></Import>
			<StartupCode><![CDATA[MyThread startDataCollection = new MyThread();
String[] stringList = new String[1];
stringList[0] = getSimulationTimeLong() + 10000 + "";
startDataCollection.main(stringList);
loadExcel();]]></StartupCode>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1443189243243</Id>
				<Name><![CDATA[1443189243243]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1443254400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1443189243241</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<Label><X>10</X><Y>0</Y></Label>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<ConnectionsId>1443189243240</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1443190572513</Id>
					<Name><![CDATA[instructionList]]></Name>
					<X>230</X><Y>-370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[HashMap<Long,String>]]></Type>        
						<InitialValue><![CDATA[new HashMap()]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1443192385059</Id>
					<Name><![CDATA[RpiConnection]]></Name>
					<X>230</X><Y>-350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[RPiConnection]]></Type>        
						<InitialValue><![CDATA[new RPiConnection()]]></InitialValue>                 	
					</Properties>
				</Variable>
			</Variables>
			<Events>
				<Event>
					<Id>1443191459724</Id>
					<Name><![CDATA[setValveEvent]]></Name>
					<X>240</X><Y>-190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="cyclic">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
						</Timeout>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_SECOND]]></Unit>
						</Rate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1443254400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
						<Action><![CDATA[if(instructionList.get(getSimulationTimeLong())!= null){
	//traceln(instructionList.get(getSimulationTimeLong()));
	String energyCap = instructionList.get(getSimulationTimeLong()).split(";")[0];
	String lpm = instructionList.get(getSimulationTimeLong()).split(";")[1];
	RpiConnection.setValve(energyCap,lpm);
}]]></Action>
					</Properties>
				</Event>
				<Event>
					<Id>1443193422771</Id>
					<Name><![CDATA[getDataEvent]]></Name>
					<X>240</X><Y>-150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="cyclic">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
						</Timeout>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_SECOND]]></Unit>
						</Rate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1443254400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[15]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
						<Action><![CDATA[traceln(RpiConnection.getData(getSimulationTimeLong(),getSimulationTimeLong()+1000));
]]></Action>
					</Properties>
				</Event>
			</Events>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1443189530857</Id>
					<Name><![CDATA[loadExcel]]></Name>
					<X>230</X><Y>-410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[int sheetIndex = 2;
int rowIndex = 8;
int columnDateIndex = 1;
int columnEnergCapIndex = 2;
int columnLpmIndex = 4;

while (excelFile.cellExists(sheetIndex, rowIndex, columnDateIndex)){
	Calendar excelCal = Calendar.getInstance();
	excelCal.setTime(excelFile.getCellDateValue(sheetIndex, rowIndex, columnDateIndex));
	
	Calendar currentDate = convertToCurrentYear(excelCal);
	double energyCap = excelFile.getCellNumericValue(sheetIndex, rowIndex, columnEnergCapIndex);
	double lpm = excelFile.getCellNumericValue(sheetIndex, rowIndex, columnLpmIndex);
	instructionList.put(currentDate.getTimeInMillis(), energyCap + ";" + lpm);
	traceln(currentDate.getTime()/*currentDate.get(Calendar.HOUR_OF_DAY) + ":" + currentDate.get(Calendar.MINUTE)*/ + ";" + energyCap + ";" + lpm);
	rowIndex++;
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[Calendar]]></ReturnType>
					<Id>1443190946954</Id>
					<Name><![CDATA[convertToCurrentYear]]></Name>
					<X>230</X><Y>-390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[oldCalendarDate]]></Name>
						<Type><![CDATA[Calendar]]></Type>
					</Parameter>
					<Body><![CDATA[Calendar currentDate = Calendar.getInstance();
	currentDate.setTime(timeToDate(time()));
	currentDate.set(Calendar.HOUR_OF_DAY, oldCalendarDate.get(Calendar.HOUR_OF_DAY));
	currentDate.set(Calendar.MINUTE, oldCalendarDate.get(Calendar.MINUTE));
return currentDate;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[long]]></ReturnType>
					<Id>1443191736074</Id>
					<Name><![CDATA[getSimulationTimeLong]]></Name>
					<X>230</X><Y>-430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return timeToDate(time()).getTime();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1443193243251</Id>
					<Name><![CDATA[parseData]]></Name>
					<X>240</X><Y>-120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[String XMLFile = "";
thermoHotText.setText("THot:" + XMLFile/*value from the thermomiter hot*/ + "°C");]]></Body>
				</Function>
			</Functions>
			<Connectivity>
				<ExcelFile>
					<Id>1443189286279</Id>
					<Name><![CDATA[excelFile]]></Name>
					<X>230</X><Y>-330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<FileName><![CDATA[EN 13203_tapping cycles_v1.xls]]></FileName>
					<SaveInSnapshot>false</SaveInSnapshot>
					<LoadOnStartup>true</LoadOnStartup>
					<SaveOnDispose>true</SaveOnDispose>
				</ExcelFile>
			</Connectivity>
			<AgentLinks>
				<AgentLink>
					<Id>1443189243240</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>


			<Shapes>
				<Rectangle>
					<Id>1443193107557</Id>
					<Name><![CDATA[rectangle]]></Name>
					<X>210</X><Y>-450</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>140</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1443193114700</Id>
					<Name><![CDATA[text]]></Name>
					<X>220</X><Y>-470</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Valve Parameters]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<RoundedRectangle>
					<Id>1443193160315</Id>
					<Name><![CDATA[roundRectangle]]></Name>
					<X>680</X><Y>50</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>140</Width>
					<Height>330</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>10</ArcRadius>
				</RoundedRectangle>
				<Line>
					<Id>1443193170804</Id>
					<Name><![CDATA[line]]></Name>
					<X>540</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Oval>
					<Id>1443193179668</Id>
					<Name><![CDATA[oval]]></Name>
					<X>600</X><Y>150</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>20</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Text>
					<Id>1443193195419</Id>
					<Name><![CDATA[thermoHotText]]></Name>
					<X>580</X><Y>110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[THot : 34 °C]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Shapes>

		</ActiveObjectClass>
	</ActiveObjectClasses>	
	<DifferentialEquationsMethod>EULER</DifferentialEquationsMethod>
	<MixedEquationsMethod>RK45_NEWTON</MixedEquationsMethod>
	<AlgebraicEquationsMethod>MODIFIED_NEWTON</AlgebraicEquationsMethod>
	<AbsoluteAccuracy>1.0E-5</AbsoluteAccuracy>
	<FixedTimeStep>0.001</FixedTimeStep>
	<RelativeAccuracy>1.0E-5</RelativeAccuracy>
	<TimeAccuracy>1.0E-5</TimeAccuracy>	
	<Experiments>	
		<!--   =========   Simulation Experiment   ========  -->
		<SimulationExperiment ActiveObjectClassId="1443189243244">
			<Id>1443189243246</Id>
			<Name><![CDATA[Simulation]]></Name>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Frame>
				<X>0</X>
				<Y>0</Y>
				<Width>1000</Width>
				<Height>600</Height>
				<Maximized>false</Maximized>
				<CloseConfirmation>false</CloseConfirmation>
			</Frame>
			<CommandLineArguments><![CDATA[]]></CommandLineArguments>
			<MaximumMemory>256</MaximumMemory>
			<RandomNumberGenerationType>fixedSeed</RandomNumberGenerationType>
			<CustomGeneratorCode>new Random()</CustomGeneratorCode>
			<SeedValue>1</SeedValue>
			<SelectionModeForSimultaneousEvents>LIFO</SelectionModeForSimultaneousEvents>
			<VmArgs><![CDATA[]]></VmArgs>
			<LoadRootFromSnapshot>false</LoadRootFromSnapshot>
			<SnapshotFile></SnapshotFile>

			<Shapes>
				<Text>
					<Id>1443189243247</Id>
					<Name><![CDATA[text]]></Name>
					<X>40</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-12490271</Color>
					<Text><![CDATA[Water Heater]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Shapes>
			<Controls>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1443189243248</Id>
					<Name><![CDATA[button]]></Name>
					<X>40</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<BasicProperties Width="100" Height="30" 
				AsObject="true">
                        <EmbeddedIcon>false</EmbeddedIcon>				
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[if ( getState() == IDLE )
	run();
getPresentation().setPresentable( getEngine().getRoot() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Run]]></LabelText>
						<LabelCode><![CDATA[getState() == IDLE ?
	"Run" :
	"Top level agent"]]></LabelCode>
					</ExtendedProperties>
				</Control>
			</Controls>

			<Parameters>			
			</Parameters>			
			<PresentationProperties 
				EnableAdaptiveFrameManagement="true" 
				EnableAntiAliasing="true"
				EnableEnhancedModelElementsAnimation="true"
				EnablePanning="true"
				ToolbarCustomizableAtRuntime="true"
				EnableZoom="true">
				<ExecutionMode><![CDATA[realTimeScaled]]></ExecutionMode>
				<CpuRatio><![CDATA[ratio_1_2]]></CpuRatio>	        
				<Title><![CDATA[Water Heater : Simulation]]></Title>	
				<FramesPerSecond><![CDATA[20.0]]></FramesPerSecond>
				<RealTimeScale>1.0</RealTimeScale>
				<UIProperty Name="Experiment Progress" Value="false"/>
				<UIProperty Name="Simulation Progress" Value="true"/>
				<UIProperty Name="Statusbar Events Per Second" Value="false"/>
				<UIProperty Name="Statusbar Frames Per Second" Value="false"/>
				<UIProperty Name="Statusbar Memory" Value="true"/>
				<UIProperty Name="Statusbar Model Date" Value="true"/>
				<UIProperty Name="Statusbar Model Step" Value="false"/>
				<UIProperty Name="Statusbar Model Time" Value="true"/>
				<UIProperty Name="Statusbar Real Time Of Simulation" Value="false"/>
				<UIProperty Name="Statusbar Status" Value="true"/>
				<UIProperty Name="Toolbar Animation setup" Value="false"/>
				<UIProperty Name="Toolbar Execution control" Value="true"/>
				<UIProperty Name="Toolbar File" Value="false"/>
				<UIProperty Name="Toolbar Model navigation" Value="true"/>
				<UIProperty Name="Toolbar Time scale setup" Value="true"/>
				<UIProperty Name="Toolbar View" Value="false"/>
			</PresentationProperties>
			<ModelTimeProperties 
				UseCalendar="true">
				<StopOption><![CDATA[Stop at specified date]]></StopOption>
				<InitialDate><![CDATA[1420095540000]]></InitialDate>	
				<InitialTime><![CDATA[0.0]]></InitialTime>	
				<FinalDate><![CDATA[1420156800000]]></FinalDate>	
				<FinalTime><![CDATA[61260.0]]></FinalTime>	
			</ModelTimeProperties>
		</SimulationExperiment>	
	</Experiments>
	<JavaClasses>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1443191858161</Id>
			<Name><![CDATA[RPiConnection]]></Name>
			<Text><![CDATA[import java.net.*;
import java.io.*;
import javax.websocket.ContainerProvider;
import javax.websocket.Session;
import javax.websocket.WebSocketContainer;
import org.eclipse.jetty.util.component.LifeCycle;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
 
import org.w3c.dom.Document;
import org.xml.sax.InputSource;
public class RPiConnection implements Serializable {

    /**
     * Default constructor
     */
    public RPiConnection() {
    }

	@Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

	public String getData(long date_from, long date_to){
		//String urlString="http://172.22.15.89/getData?date_from=2015-09-01&date_to=2015-09-05";//"http://172.22.15.89/getData?date_from="+date_from+"&date_to="+date_to;
		String urlString="http://eif-lab-rpi.eifer.kit.edu/getData?date_from="+date_from+"&date_to="+date_to;
		traceln(urlString);
		InputStream is = null;
	    DataInputStream dis;
	    String s="";
		
		try{
			URL url = new URL(urlString);
			URLConnection conn = url.openConnection();
			is = url.openStream();
			
			BufferedReader in = new BufferedReader( new InputStreamReader( conn.getInputStream() ) );
			s= in.readLine();
			traceln(s);
            in.close();
		    
			
		}catch(Exception e){
			System.out.println("-Exception happened-");
	        e.printStackTrace();
		}finally { 
			 try {
			    is.close();
			 } catch (IOException ioe) {
			    // just going to ignore this one
			 }
			 
	    } // end of 'finally' clause
		//RPiConnection.getData("2015-09-01","2015-09-05");
		return s;
	}
	
	public String getLiveData(){
		String urIString="http://eif-lab-rpi.eifer.kit.edu/getLiveData";
		traceln(urIString);
		InputStream is = null;
	    DataInputStream dis;
	    String s="";
		
		try{
			URI uri = new URI(urlString);
			WebSocketContainer container = ContainerProvider.getWebSocketContainer();
			
			try
            {
                // Attempt Connect
                Session session = container.connectToServer(EventSocket.class,uri);
                // Send a message
                session.getBasicRemote().sendText("Hello");
                // Close session
                session.close();
            }
            finally
            {
                // Force lifecycle stop when done with container.
                // This is to free up threads and resources that the
                // JSR-356 container allocates. But unfortunately
                // the JSR-356 spec does not handle lifecycles (yet)
                if (container instanceof LifeCycle)
                {
                    ((LifeCycle)container).stop();
                }
            }
			URLConnection conn = uri.openConnection();
			is = url.openStream();
			
			BufferedReader in = new BufferedReader( new InputStreamReader( conn.getInputStream() ) );
			s= in.readLine();
			traceln(s);
            in.close();
		    
			
		}catch(Exception e,Throwable t){
			System.out.println("-Exception happened-");
	        e.printStackTrace();
		}finally { 
			 try {
			    is.close();
			 } catch (IOException ioe) {
			    // just going to ignore this one
			 }
			 
	    } // end of 'finally' clause
		//RPiConnection.getData("2015-09-01","2015-09-05");
		return s;
	}
	
	public void setValve(String energyCap, String lpm){
		//String urlString="http://172.22.15.89/setValve?useful_energy=" + energyCap +"&water_flow_rate=" + lpm;
		String urlString="http://eif-lab-rpi.eifer.kit.edu/setValve?useful_energy=" + energyCap +"&water_flow_rate=" + lpm;
		
		try{
			URL url = new URL(urlString);
			URLConnection conn = url.openConnection();
			//is = url.openStream();
			
			BufferedReader in = new BufferedReader( new InputStreamReader( conn.getInputStream() ) );
			//s= in.readLine();
			//traceln(s);
            in.close();
		    
			
		}catch(Exception e){
			System.out.println("-Exception happened-");
	        e.printStackTrace();
		}		
	}
	
	public void startCollecting(long startDate, int period){
		//String urlString="http://172.22.15.89/setValve?useful_energy=" + energyCap +"&water_flow_rate=" + lpm;
		String urlString="http://eif-lab-rpi.eifer.kit.edu/collectData?start_date=" + startDate +"&period=" + period;
		
		try{
			URL url = new URL(urlString);
			URLConnection conn = url.openConnection();
			//is = url.openStream();
			
			BufferedReader in = new BufferedReader( new InputStreamReader( conn.getInputStream() ) );
			//s= in.readLine();
			//traceln(s);
            in.close();
		    
			
		}catch(Exception e){
			System.out.println("-Exception happened-");
	        e.printStackTrace();
		}		
	}
	
	
	public Document XmlReader(String xml) throws Exception{
		DocumentBuilderFactory fctr = DocumentBuilderFactory.newInstance();
		DocumentBuilder bldr = fctr.newDocumentBuilder();
		InputSource insrc = new InputSource(new StringReader(xml));
		traceln(bldr.parse(insrc));
		return bldr.parse(insrc); 
	}
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1443198103574</Id>
			<Name><![CDATA[MyThread]]></Name>
			<Text><![CDATA[public class MyThread extends Thread {
	RPiConnection RpiConnection =new RPiConnection();
	static long timeLong = 0;
    public void run() {
    	RpiConnection.startCollecting(timeLong, 300);
    }

    public static void main(String args[]) {
    	for(int i = 0; i < args.length; i++) {
    		timeLong = Long.parseLong(args[i]);
        }
        (new MyThread()).start();
    }

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1443198305734</Id>
			<Name><![CDATA[MyClass]]></Name>
			<Text><![CDATA[/**
 * MyClass
 */	
public class MyClass implements Serializable {

    /**
     * Default constructor
     */


	@Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
	</JavaClasses>
</Model>
</AnyLogicWorkspace>